#!/usr/bin/env bash

set -eo pipefail

function show_help {
  echo "Usage: tmux-start PROJECT_DIRNAME KUEBCONFIG_FILENAME"
  echo ""
  echo "PROJECT_DIRNAME: it must exist as a directory in \$HOME/src directory."
  echo "KUBECONFIG_FILENAME: it must exist as a file in \$HOME/.kube directory."
}

PROJECT="${1}"
KUBECONFIG_FILENAME="${2}"

if [ -z "${PROJECT}" ] || [ -z "${KUBECONFIG_FILENAME}" ]; then
  echo "PROJECT_DIRNAME or KUBECONFIG_FILENAME file name not specified." 
  show_help
  exit 1
fi

KUBECONFIG_DIRNAME="${HOME}/.kube"
KUBECONFIG="${KUBECONFIG_DIRNAME}/${KUBECONFIG_FILENAME}"
WORKSPACE_HOME="${HOME}/src"
WORKSPACE="${WORKSPACE_HOME}/${PROJECT}"
SESSION="${PROJECT}"
EDITOR="vim -c NERDTree"
EDITOR_MAIN_COMMAND="${EDITOR}"
EDITOR_TERMINAL_COMMAND="git log --oneline --decorate --graph"
DASHBOARD_COMMAND="k9s"

tmux new-session -d -P -c $WORKSPACE -s $SESSION

for n in 1 2; do
  WINDOW=$SESSION:$n
  case $n in
    1)
      tmux rename-window -t $WINDOW "editor"
      #tmux split-window -t $WINDOW -p 50 -c $WORKSPACE
      tmux send-keys -t $WINDOW "export KUBECONFIG=${KUBECONFIG}" C-m
      tmux send-keys -t $WINDOW "${EDITOR_TERMINAL_COMMAND}" C-m
      #tmux select-pane -t $WINDOW.0
      #tmux send-keys -t $WINDOW "${EDITOR_MAIN_COMMAND}" C-m
      ;;
    2)
      tmux new-window -t $WINDOW -n "dashboard" -c $WORKSPACE
      tmux send-keys -t $WINDOW "export KUBECONFIG=${KUBECONFIG}" C-m
      tmux send-keys -t $WINDOW "${DASHBOARD_COMMAND}" C-m
      ;;
  esac
done
